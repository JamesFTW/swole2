const fs = require('fs')
const path = require('path')

// Directories to process (relative to the project root)
const directoriesToProcess = [
  './app/components',
  './app/features',
  './app/layout',
  // Add more directories as needed
]

function generateExports(directory) {
  try {
    const outputFile = path.join(directory, 'index.js')

    // Generate the header for the output file
    const header = `/***************************************************************
  THIS FILE IS AUTOGENERATED!!
  use command 'npm run compile' to export files
***************************************************************/\n\n`

    // Get all first-level child directories
    const childDirs = fs
      .readdirSync(directory, { withFileTypes: true })
      .filter(dirent => dirent.isDirectory())
      .map(dirent => dirent.name)

    // Generate export statements
    const exports = childDirs.map(childDir => {
      const childPath = path.join(directory, childDir)
      const files = fs.readdirSync(childPath)

      // Check if there's a .js file with the same name as the directory
      const matchingFile = files.find(file => file.toLowerCase() === `${childDir.toLowerCase()}.js`)

      if (matchingFile) {
        return `export * from './${childDir}/${path.basename(matchingFile, '.js')}'`
      } else {
        // If no matching file found, export the entire directory
        return `export * from './${childDir}'`
      }
    })

    // Write the output file
    const content = header + exports.join('\n') + '\n'
    fs.writeFileSync(outputFile, content)

    console.log(`Exports generated successfully in ${outputFile}`)
  } catch (error) {
    console.error(`Error generating exports for ${directory}:`, error)
  }
}

function processDirectories() {
  for (const dir of directoriesToProcess) {
    console.log(`Processing directory: ${dir}`)
    generateExports(dir)
  }
}

processDirectories()
